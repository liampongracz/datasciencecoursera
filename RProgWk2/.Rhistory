install.packages("devtools")
library(devtools)
find_rtools()
install.packages("KernSmooth")
library(KernSmooth)
q()
data <- read.csv("file:///C:\Users\liamp\AppData\Local\Temp\Temp1_quiz1_data.zip\hw1_data.csv")
data <- read.csv("C:/Users/liamp/Documents/JHU%20Data%20science%20coursera/quiz1data.csv")
data <- read.csv("C:/Users/liamp/Documents/JHUDatasciencecoursera/quiz1data.csv")
data <- read.csv("C:/Users/liamp/Documents/JHU Data science coursera/quiz1data.csv")
colnames(data)
rownames(data)
data2 <- data[1:2]
data2 <- data[1:2,]
data[c(1,2)]
data[1:6, ]
data[151:153]
data[151:153, ]
data[47, 1]
data2 <- is.na(data[c(1:153, 1)])
miss <- is.na(data[, "Ozone"])
sum(miss)
miss
notna <- data[!miss, "Ozone"]
notna
sum(notna)/sum(miss)
sum(notna)
sum(notna)/length(notna)
subset(data, Ozone >31 & Temp >90)
solar <- subset(data, Ozone >31 & Temp >90)
solar
mean(solar[, "Solar.R"])
month <- (data, Month =6)
month <- subset(data, Month = 6)
month
month <- subset(data, Month == 6)
month
mean(month[, "Month"])
mean(month[, "Temp"])
may <- subset(data, Month == 5)
max(may[, "Ozone"])
nona <- data[!is.na(data[, "Month"])]
nona <- data[!is.na, "Month")]
max(may[, "Ozone"])
maynona <- !is.na(may[, "Ozone"])
maynona
max(maynona[, "Ozone"])
mayno <- may[maynona, "Ozone"]
mayno
max(mayno)
add2 <- function(x,y) {
x+y
}
add2(35)
add2(3,5)
above <- function(x, n) {
use <- x > n
x[use]
}
above <- function(x, n) {
use <- x > n
x[u]
}
x <- 1:20
above(x, 10)
above <- function(x, n) {
use <- x > n
x[use]
}
above(x,10)
columnmean <- function(y) {
nc <- ncol(y)
means <- numeric(nc)
for(i in 1:nc) {
means[i] <- mean(y[,i])
}
means
}
columnmean(airquality)
columnmean <- function(y, removeNA = TRUE) {
nc <- ncol(y)
means <- numeric(nc)
for(i in 1:nc) {
means[i] <- mean(y[,i], na.rn = removeNA)
}
means
}
columnmean(airquality)
columnmean(airquality, FALSE)
columnmean(airquality)
pollutantmean("C:\Users\liamp\Documents\JHU Data science coursera\specdata", "sulfate", 20)
pollutantmean <- function(directory, pollutant, id = 1:332) {
fileList <- list.files(path = directory, pattern = ".csv", full.names = TRUE)
values <- numeric()
for(i in id) {
data <- read.csv(fileList[i])
values <- c(values, data[[pollutant]])
}
mean(values, na.rm = TRUE)
}
pollutantmean("C:\Users\liamp\Documents\JHU Data science coursera\specdata", "sulfate", 20)
pollutantmean("\Users\liamp\Documents\JHU Data science coursera\specdata", "sulfate", 20)
pollutantmean("C:\\Users\liamp\Documents\JHU Data science coursera\specdata", "sulfate", 20)
pollutantmean("C:/Users/liamp/Documents/JHU Data science coursera/specdata", "sulfate", 20)
getwd()
setwd("C:/Users/liamp/Documents/JHU Data science coursera/specdata")
getwd()
data <- read.csv("/001.csv")
setwd(C:/Users/liamp/Desktop/datasciencecoursera)
getwd()
setwd("C:/Users/liamp/Desktop/datasciencecoursera")
getwd()
read.csv("/specdata/001.csv")
data <- read.csv("specdata/001.csv")
data
setwd(C:/Users/liamp/datasciencecoursera)
setwd("C:/Users/liamp/datasciencecoursera")
getwd()
setwd("/RProgWk2")
setwd("C:/Users/liamp/datasciencecoursera/RProgWk2")
getwd()
complete("specdata/", 1)
nobs <- c(nobs, sum(complete.cases(data)))
complete("specdata/", 1)
complete <- function(directory, id=1:332) {
fileList <- list.files(path = directory, pattern = ".csv", full.names = TRUE)
nobs <- numeric()
for(i in id) {
data <- read.csv(fileList[i])
nobs <- c(nobs, sum(complete.cases(data)))
}
}
complete("specdata/", 1)
complete <- function(directory, id=1:332) {
fileList <- list.files(path = directory, pattern = ".csv", full.names = TRUE)
nobs <- numeric()
for(i in id) {
data <- read.csv(fileList[i])
nobs <- c(nobs, sum(complete.cases(data)))
}
}
complete("specdata/", 1)
getwd()
pollutantmean("specdata/", "sulfate", 20)
pollutantmean("specdata/", "sulfate", 20)
complete("specdata/", c(1,2))
data.frame(id,nobs)
complete <- function(directory, id=1:332) {
fileList <- list.files(path = directory, pattern = ".csv", full.names = TRUE)
nobs <- numeric()
for(i in id) {
data <- read.csv(fileList[i])
nobs <- c(nobs, sum(complete.cases(data)))
}
data.frame(id,nobs)
}
complete("specdata/", 1)
complete("specdata/", c(1,5))
comp <- data[complete.cases(data)]
nobs <- nrow(comp)
corr <- function(directory, threshold = 0) {
fileList <- list.files(path = directory, pattern = ".csv", full.names = TRUE)
above <- numeric()
for(i in 1:length(fileList)) {
data <- read.csv(fileList[i], header = TRUE)
comp <- data[complete.cases(data)]
nobs <- nrow(comp)
if(nobs > threshold) {
above <- c(above, cor(temp$nitrate, temp$sulfate))
}
}
above
}
cr <- corr("specdata", 150)
nobs <- nrow(data)
if(nobs > threshold) {
above <- c(above, cor(temp$nitrate, temp$sulfate))
}
data <- data[complete.cases(data), ]
nobs <- nrow(data)
if(nobs > threshold) {
above <- c(above, cor(temp$nitrate, temp$sulfate))
}
above <- append(above, correlation)
if(nrow(data) > threshold) {
correlation <- cor(data[["sulfate"]], data[["nitrate"]])
above <- append(above, correlation)
}
corr <- function(directory, threshold = 0) {
fileList <- list.files(path = directory, pattern = ".csv", full.names = TRUE)
above <- numeric()
for(i in 1:length(fileList)) {
data <- read.csv(fileList[i], header = TRUE)
data <- data[complete.cases(data), ]
if(nrow(data) > threshold) {
correlation <- cor(data[["sulfate"]], data[["nitrate"]])
above <- append(above, correlation)
}
}
above
}
corr("specdata/", 150)
corr("specdata/", 150)
cr<- corr("specdata/", 150)
head(cr)
summary(cr)
pollutantmean("specdata", "sulfate", 1:10)
pollutantmean("specdata", "nitrate", 70:72)
pollutantmean("specdata", "sulfate", 34)
pollutantmean("specdata", "nitrate")
cc <- complete("specdata", c(6, 10, 20, 34, 100, 200, 310))
print(cc$nobs)
cc <- complete("specdata", 54)
print(cc$nobs)
RNGversion("3.5.1")
set.seed(42)
cc <- complete("specdata", 332:1)
use <- sample(332, 10)
print(cc[use, "nobs"])
cr <- corr("specdata")
cr <- sort(cr)
RNGversion("3.5.1")
set.seed(868)
out <- round(cr[sample(length(cr), 5)], 4)
print(out)
cr <- corr("specdata", 129)
cr <- sort(cr)
n <- length(cr)
RNGversion("3.5.1")
set.seed(197)
out <- c(n, round(cr[sample(n, 5)], 4))
print(out)
cr <- corr("specdata", 2000)
n <- length(cr)
cr <- corr("specdata", 1000)
cr <- sort(cr)
print(c(n, round(cr, 4)))
